// "use client"

// import type React from "react"

// import { useState } from "react"
// import { Calendar, Camera, Clock, FileText, Loader2 } from "lucide-react"

// export default function LMSUserProfile() {
//   const [isLoading, setIsLoading] = useState(false)
//   const [avatar, setAvatar] = useState<string>("/placeholder.svg?height=100&width=100")

//   // Sample user data for an LMS profile
//   const [userData, setUserData] = useState({
//     name: "Alex Johnson",
//     email: "alex.johnson@example.com",
//     role: "Student",
//     joinedDate: "September 2023",
//     lastActive: "Today at 10:30 AM",
//     completionRate: 78,
//     totalCoursesCompleted: 12,
//     totalHoursLearned: 87,
//     certificatesEarned: 8,
//     currentCourses: [
//       {
//         id: 1,
//         title: "Advanced Web Development",
//         progress: 65,
//         lastAccessed: "Yesterday",
//         thumbnail: "/placeholder.svg?height=60&width=100",
//       },
//       {
//         id: 2,
//         title: "UX Design Fundamentals",
//         progress: 42,
//         lastAccessed: "3 days ago",
//         thumbnail: "/placeholder.svg?height=60&width=100",
//       },
//       {
//         id: 3,
//         title: "Data Science Essentials",
//         progress: 89,
//         lastAccessed: "Today",
//         thumbnail: "/placeholder.svg?height=60&width=100",
//       },
//     ],
//     completedCourses: [
//       {
//         id: 4,
//         title: "Introduction to JavaScript",
//         completedDate: "August 15, 2023",
//         grade: "A",
//         certificate: true,
//       },
//       {
//         id: 5,
//         title: "Responsive Web Design",
//         completedDate: "July 22, 2023",
//         grade: "A-",
//         certificate: true,
//       },
//       {
//         id: 6,
//         title: "HTML & CSS Basics",
//         completedDate: "June 10, 2023",
//         grade: "B+",
//         certificate: true,
//       },
//     ],
//     achievements: [
//       { id: 1, title: "Fast Learner", description: "Completed 5 courses in one month", icon: "üöÄ", date: "July 2023" },
//       {
//         id: 2,
//         title: "Perfect Score",
//         description: "Achieved 100% on a course assessment",
//         icon: "üèÜ",
//         date: "August 2023",
//       },
//       {
//         id: 3,
//         title: "Consistent Learner",
//         description: "Logged in for 30 consecutive days",
//         icon: "üî•",
//         date: "September 2023",
//       },
//     ],
//     learningPreferences: {
//       preferredLanguage: "English",
//       contentFormat: "Video",
//       studyReminders: true,
//       emailNotifications: true,
//     },
//   })

//   function handleAvatarChange(event: React.ChangeEvent<HTMLInputElement>) {
//     const file = event.target.files?.[0]
//     if (file) {
//       const reader = new FileReader()
//       reader.onload = (e) => {
//         setAvatar(e.target?.result as string)
//       }
//       reader.readAsDataURL(file)
//     }
//   }

//   function handleSavePreferences() {
//     setIsLoading(true)

//     // Simulate API call
//     setTimeout(() => {
//       setIsLoading(false)
//       alert("Learning preferences updated successfully!")
//     }, 1000)
//   }

//   return (
//     <div className="max-w-6xl mx-auto py-8 px-4">
//       <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
//         {/* Left Column - User Info */}
//         <div className="lg:col-span-1">
//           <div className="bg-white rounded-lg shadow-md overflow-hidden">
//             <div className="p-6 flex flex-col items-center text-center border-b border-gray-200">
//               <div className="relative mb-4">
//                 <div className="h-24 w-24 rounded-full overflow-hidden">
//                   <img src={avatar || "/placeholder.svg"} alt="Profile" className="h-full w-full object-cover" />
//                 </div>
//                 <label
//                   htmlFor="avatar-upload"
//                   className="absolute bottom-0 right-0 flex h-8 w-8 cursor-pointer items-center justify-center rounded-full bg-blue-600 text-white shadow-sm hover:bg-blue-700"
//                 >
//                   <Camera className="h-4 w-4" />
//                   <span className="sr-only">Upload avatar</span>
//                 </label>
//                 <input
//                   id="avatar-upload"
//                   type="file"
//                   accept="image/*"
//                   className="hidden"
//                   onChange={handleAvatarChange}
//                 />
//               </div>
//               <h2 className="text-xl font-bold text-gray-900">{userData.name}</h2>
//               <p className="text-sm text-gray-500">{userData.email}</p>
//               <div className="mt-2 inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
//                 {userData.role}
//               </div>
//             </div>

//             <div className="p-6">
//               <div className="space-y-4">
//                 <div className="flex items-center text-sm">
//                   <Calendar className="mr-2 h-4 w-4 text-gray-500" />
//                   <span className="text-gray-700">Joined: {userData.joinedDate}</span>
//                 </div>
//                 <div className="flex items-center text-sm">
//                   <Clock className="mr-2 h-4 w-4 text-gray-500" />
//                   <span className="text-gray-700">Last active: {userData.lastActive}</span>
//                 </div>
//               </div>

//               <div className="mt-6">
//                 <h3 className="text-lg font-medium text-gray-900 mb-4">Learning Statistics</h3>
//                 <div className="grid grid-cols-2 gap-4">
//                   <div className="bg-gray-50 p-4 rounded-lg text-center">
//                     <div className="text-2xl font-bold text-blue-600">{userData.completionRate}%</div>
//                     <div className="text-xs text-gray-500">Completion Rate</div>
//                   </div>
//                   <div className="bg-gray-50 p-4 rounded-lg text-center">
//                     <div className="text-2xl font-bold text-blue-600">{userData.totalCoursesCompleted}</div>
//                     <div className="text-xs text-gray-500">Courses Completed</div>
//                   </div>
//                   <div className="bg-gray-50 p-4 rounded-lg text-center">
//                     <div className="text-2xl font-bold text-blue-600">{userData.totalHoursLearned}</div>
//                     <div className="text-xs text-gray-500">Hours Learned</div>
//                   </div>
//                   <div className="bg-gray-50 p-4 rounded-lg text-center">
//                     <div className="text-2xl font-bold text-blue-600">{userData.certificatesEarned}</div>
//                     <div className="text-xs text-gray-500">Certificates</div>
//                   </div>
//                 </div>
//               </div>

//               <div className="mt-6">
//                 <h3 className="text-lg font-medium text-gray-900 mb-4">Achievements</h3>
//                 <div className="space-y-4">
//                   {userData.achievements.map((achievement) => (
//                     <div key={achievement.id} className="flex items-start p-3 bg-gray-50 rounded-lg">
//                       <div className="flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-full bg-blue-100 text-blue-600 text-xl">
//                         {achievement.icon}
//                       </div>
//                       <div className="ml-3">
//                         <h4 className="text-sm font-medium text-gray-900">{achievement.title}</h4>
//                         <p className="text-xs text-gray-500">{achievement.description}</p>
//                         <p className="text-xs text-gray-400 mt-1">{achievement.date}</p>
//                       </div>
//                     </div>
//                   ))}
//                 </div>
//               </div>
//             </div>
//           </div>
//         </div>

//         {/* Right Column - Course Progress & Settings */}
//         <div className="lg:col-span-2">
//           {/* Current Courses */}
//           <div className="bg-white rounded-lg shadow-md overflow-hidden mb-8">
//             <div className="p-6 border-b border-gray-200">
//               <h3 className="text-lg font-medium text-gray-900">Current Courses</h3>
//               <p className="text-sm text-gray-500">Your ongoing learning journey</p>
//             </div>
//             <div className="p-6">
//               <div className="space-y-6">
//                 {userData.currentCourses.map((course) => (
//                   <div key={course.id} className="flex flex-col sm:flex-row sm:items-center">
//                     <div className="flex-shrink-0 mb-4 sm:mb-0 sm:mr-4">
//                       <img
//                         src={course.thumbnail || "/placeholder.svg"}
//                         alt={course.title}
//                         className="h-16 w-28 object-cover rounded-md"
//                       />
//                     </div>
//                     <div className="flex-grow">
//                       <div className="flex justify-between items-start mb-2">
//                         <h4 className="text-base font-medium text-gray-900">{course.title}</h4>
//                         <span className="text-sm text-gray-500">Last accessed: {course.lastAccessed}</span>
//                       </div>
//                       <div className="w-full bg-gray-200 rounded-full h-2.5">
//                         <div className="bg-blue-600 h-2.5 rounded-full" style={{ width: `${course.progress}%` }}></div>
//                       </div>
//                       <div className="flex justify-between mt-1">
//                         <span className="text-xs text-gray-500">{course.progress}% complete</span>
//                         <a href="#" className="text-xs text-blue-600 hover:text-blue-800">
//                           Continue Learning
//                         </a>
//                       </div>
//                     </div>
//                   </div>
//                 ))}
//               </div>
//             </div>
//           </div>

//           {/* Completed Courses */}
//           <div className="bg-white rounded-lg shadow-md overflow-hidden mb-8">
//             <div className="p-6 border-b border-gray-200">
//               <h3 className="text-lg font-medium text-gray-900">Completed Courses</h3>
//               <p className="text-sm text-gray-500">Courses you've successfully finished</p>
//             </div>
//             <div className="p-6">
//               <div className="overflow-x-auto">
//                 <table className="min-w-full divide-y divide-gray-200">
//                   <thead className="bg-gray-50">
//                     <tr>
//                       <th
//                         scope="col"
//                         className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
//                       >
//                         Course
//                       </th>
//                       <th
//                         scope="col"
//                         className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
//                       >
//                         Completed
//                       </th>
//                       <th
//                         scope="col"
//                         className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
//                       >
//                         Grade
//                       </th>
//                       <th
//                         scope="col"
//                         className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
//                       >
//                         Certificate
//                       </th>
//                     </tr>
//                   </thead>
//                   <tbody className="bg-white divide-y divide-gray-200">
//                     {userData.completedCourses.map((course) => (
//                       <tr key={course.id}>
//                         <td className="px-6 py-4 whitespace-nowrap">
//                           <div className="text-sm font-medium text-gray-900">{course.title}</div>
//                         </td>
//                         <td className="px-6 py-4 whitespace-nowrap">
//                           <div className="text-sm text-gray-500">{course.completedDate}</div>
//                         </td>
//                         <td className="px-6 py-4 whitespace-nowrap">
//                           <div className="text-sm font-medium text-gray-900">{course.grade}</div>
//                         </td>
//                         <td className="px-6 py-4 whitespace-nowrap">
//                           {course.certificate ? (
//                             <a href="#" className="inline-flex items-center text-sm text-blue-600 hover:text-blue-800">
//                               <FileText className="h-4 w-4 mr-1" />
//                               View
//                             </a>
//                           ) : (
//                             <span className="text-sm text-gray-500">N/A</span>
//                           )}
//                         </td>
//                       </tr>
//                     ))}
//                   </tbody>
//                 </table>
//               </div>
//             </div>
//           </div>

//           {/* Learning Preferences */}
//           <div className="bg-white rounded-lg shadow-md overflow-hidden">
//             <div className="p-6 border-b border-gray-200">
//               <h3 className="text-lg font-medium text-gray-900">Learning Preferences</h3>
//               <p className="text-sm text-gray-500">Customize your learning experience</p>
//             </div>
//             <div className="p-6">
//               <div className="space-y-6">
//                 <div>
//                   <label htmlFor="language" className="block text-sm font-medium text-gray-700">
//                     Preferred Language
//                   </label>
//                   <select
//                     id="language"
//                     name="language"
//                     className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
//                     defaultValue={userData.learningPreferences.preferredLanguage}
//                   >
//                     <option>English</option>
//                     <option>Spanish</option>
//                     <option>French</option>
//                     <option>German</option>
//                     <option>Chinese</option>
//                   </select>
//                 </div>

//                 <div>
//                   <label htmlFor="content-format" className="block text-sm font-medium text-gray-700">
//                     Preferred Content Format
//                   </label>
//                   <select
//                     id="content-format"
//                     name="content-format"
//                     className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
//                     defaultValue={userData.learningPreferences.contentFormat}
//                   >
//                     <option>Video</option>
//                     <option>Text</option>
//                     <option>Audio</option>
//                     <option>Interactive</option>
//                   </select>
//                 </div>

//                 <div className="flex items-center">
//                   <input
//                     id="study-reminders"
//                     name="study-reminders"
//                     type="checkbox"
//                     className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
//                     defaultChecked={userData.learningPreferences.studyReminders}
//                   />
//                   <label htmlFor="study-reminders" className="ml-2 block text-sm text-gray-700">
//                     Enable study reminders
//                   </label>
//                 </div>

//                 <div className="flex items-center">
//                   <input
//                     id="email-notifications"
//                     name="email-notifications"
//                     type="checkbox"
//                     className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
//                     defaultChecked={userData.learningPreferences.emailNotifications}
//                   />
//                   <label htmlFor="email-notifications" className="ml-2 block text-sm text-gray-700">
//                     Receive email notifications about new courses and updates
//                   </label>
//                 </div>

//                 <div className="pt-5">
//                   <button
//                     type="button"
//                     onClick={handleSavePreferences}
//                     disabled={isLoading}
//                     className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
//                   >
//                     {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
//                     Save Preferences
//                   </button>
//                 </div>
//               </div>
//             </div>
//           </div>
//         </div>
//       </div>
//     </div>
//   )
// }

"use client"

import type React from "react"

import { useState } from "react"
import {
  Award,
  BookOpen,
  Calendar,
  Camera,
  Clock,
  Download,
  Edit,
  FileText,
  Headphones,
  Loader2,
  Monitor,
  Video,
} from "lucide-react"

export default function LMSUserProfile() {
  const [isLoading, setIsLoading] = useState(false)
  const [avatar, setAvatar] = useState<string>("/placeholder.svg?height=100&width=100")

  // D·ªØ li·ªáu m·∫´u cho h·ªì s∆° h·ªçc vi√™n tr·ª±c tuy·∫øn
  const [userData, setUserData] = useState({
    name: "Nguy·ªÖn VƒÉn An",
    email: "nguyenvanan@example.com",
    role: "H·ªçc vi√™n",
    joinedDate: "Th√°ng 9 nƒÉm 2023",
    lastActive: "H√¥m nay l√∫c 10:30",
    completionRate: 78,
    totalCoursesCompleted: 12,
    totalHoursLearned: 87,
    certificatesEarned: 8,
    learningStreak: 15, // S·ªë ng√†y h·ªçc li√™n ti·∫øp
    totalQuizzesPassed: 42,
    totalAssignmentsSubmitted: 28,
    currentCourses: [
      {
        id: 1,
        title: "Ti·∫øng Anh giao ti·∫øp c∆° b·∫£n",
        progress: 65,
        lastAccessed: "H√¥m qua",
        thumbnail: "/placeholder.svg?height=60&width=100",
        instructor: "C√¥ Ph∆∞∆°ng Anh",
        nextLesson: "B√†i 7: Giao ti·∫øp t·∫°i nh√† h√†ng",
        type: "video",
      },
      {
        id: 2,
        title: "Excel cho c√¥ng vi·ªác vƒÉn ph√≤ng",
        progress: 42,
        lastAccessed: "3 ng√†y tr∆∞·ªõc",
        thumbnail: "/placeholder.svg?height=60&width=100",
        instructor: "Th·∫ßy Minh Tu·∫•n",
        nextLesson: "B√†i 5: H√†m VLOOKUP n√¢ng cao",
        type: "interactive",
      },
      {
        id: 3,
        title: "L·∫≠p tr√¨nh Python c∆° b·∫£n",
        progress: 89,
        lastAccessed: "H√¥m nay",
        thumbnail: "/placeholder.svg?height=60&width=100",
        instructor: "Th·∫ßy Ho√†ng Nam",
        nextLesson: "B√†i 12: X·ª≠ l√Ω file",
        type: "video",
      },
    ],
    completedCourses: [
      {
        id: 4,
        title: "K·ªπ nƒÉng thuy·∫øt tr√¨nh chuy√™n nghi·ªáp",
        completedDate: "15/08/2023",
        grade: "Xu·∫•t s·∫Øc",
        certificate: true,
        instructor: "C√¥ Thu H√†",
      },
      {
        id: 5,
        title: "Marketing Online c∆° b·∫£n",
        completedDate: "22/07/2023",
        grade: "Gi·ªèi",
        certificate: true,
        instructor: "Th·∫ßy ƒê·ª©c Anh",
      },
      {
        id: 6,
        title: "Photoshop cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu",
        completedDate: "10/06/2023",
        grade: "Kh√°",
        certificate: true,
        instructor: "C√¥ Minh T√¢m",
      },
    ],
    upcomingWebinars: [
      {
        id: 1,
        title: "Xu h∆∞·ªõng c√¥ng ngh·ªá 2024",
        date: "15/04/2024",
        time: "19:30 - 21:00",
        speaker: "Chuy√™n gia Tr·∫ßn ƒê·ª©c Minh",
      },
      {
        id: 2,
        title: "K·ªπ nƒÉng ph·ªèng v·∫•n xin vi·ªác",
        date: "22/04/2024",
        time: "20:00 - 21:30",
        speaker: "Chuy√™n gia Nguy·ªÖn Th·ªã H∆∞∆°ng",
      },
    ],
    achievements: [
      {
        id: 1,
        title: "H·ªçc vi√™n chƒÉm ch·ªâ",
        description: "Ho√†n th√†nh 5 kh√≥a h·ªçc trong m·ªôt th√°ng",
        icon: "üöÄ",
        date: "Th√°ng 7/2023",
      },
      {
        id: 2,
        title: "ƒêi·ªÉm cao nh·∫•t",
        description: "ƒê·∫°t ƒëi·ªÉm cao nh·∫•t trong b√†i ki·ªÉm tra",
        icon: "üèÜ",
        date: "Th√°ng 8/2023",
      },
      {
        id: 3,
        title: "Si√™u h·ªçc vi√™n",
        description: "ƒêƒÉng nh·∫≠p h·ªçc 30 ng√†y li√™n ti·∫øp",
        icon: "üî•",
        date: "Th√°ng 9/2023",
      },
    ],
    downloadedMaterials: [
      { id: 1, title: "T√†i li·ªáu Excel n√¢ng cao.pdf", date: "10/04/2024" },
      { id: 2, title: "B√†i t·∫≠p Python.zip", date: "05/04/2024" },
      { id: 3, title: "Slide Ti·∫øng Anh giao ti·∫øp.pptx", date: "01/04/2024" },
    ],
    learningPreferences: {
      preferredLanguage: "Ti·∫øng Vi·ªát",
      contentFormat: "Video",
      studyReminders: true,
      emailNotifications: true,
      preferredStudyTime: "Bu·ªïi t·ªëi",
      videoQuality: "HD",
      downloadEnabled: true,
      subtitlesEnabled: true,
    },
  })

  function handleAvatarChange(event: React.ChangeEvent<HTMLInputElement>) {
    const file = event.target.files?.[0]
    if (file) {
      const reader = new FileReader()
      reader.onload = (e) => {
        setAvatar(e.target?.result as string)
      }
      reader.readAsDataURL(file)
    }
  }

  function handleSavePreferences() {
    setIsLoading(true)

    // Gi·∫£ l·∫≠p API call
    setTimeout(() => {
      setIsLoading(false)
      alert("C·∫≠p nh·∫≠t t√πy ch·ªçn h·ªçc t·∫≠p th√†nh c√¥ng!")
    }, 1000)
  }

  // Hi·ªÉn th·ªã icon ph√π h·ª£p v·ªõi lo·∫°i kh√≥a h·ªçc
  function CourseTypeIcon({ type }: { type: string }) {
    switch (type) {
      case "video":
        return <Video className="h-4 w-4 text-red-500" />
      case "interactive":
        return <Monitor className="h-4 w-4 text-green-500" />
      case "audio":
        return <Headphones className="h-4 w-4 text-purple-500" />
      default:
        return <BookOpen className="h-4 w-4 text-blue-500" />
    }
  }

  return (
    <div className="max-w-6xl mx-auto py-8 px-4">
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* C·ªôt tr√°i - Th√¥ng tin h·ªçc vi√™n */}
        <div className="lg:col-span-1">
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="p-6 flex flex-col items-center text-center border-b border-gray-200">
              <div className="relative mb-4">
                <div className="h-24 w-24 rounded-full overflow-hidden">
                  <img src={avatar || "/placeholder.svg"} alt="·∫¢nh ƒë·∫°i di·ªán" className="h-full w-full object-cover" />
                </div>
                <label
                  htmlFor="avatar-upload"
                  className="absolute bottom-0 right-0 flex h-8 w-8 cursor-pointer items-center justify-center rounded-full bg-blue-600 text-white shadow-sm hover:bg-blue-700"
                >
                  <Camera className="h-4 w-4" />
                  <span className="sr-only">T·∫£i ·∫£nh l√™n</span>
                </label>
                <input
                  id="avatar-upload"
                  type="file"
                  accept="image/*"
                  className="hidden"
                  onChange={handleAvatarChange}
                />
              </div>
              <h2 className="text-xl font-bold text-gray-900">{userData.name}</h2>
              <p className="text-sm text-gray-500">{userData.email}</p>
              <div className="mt-2 inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
                {userData.role}
              </div>
              <a
                href="/profile/edit"
                className="inline-flex items-center mt-3 text-sm text-blue-600 hover:text-blue-800"
              >
                <Edit className="h-3.5 w-3.5 mr-1" />
                Ch·ªânh s·ª≠a h·ªì s∆°
              </a>
            </div>

            <div className="p-6">
              <div className="space-y-4">
                <div className="flex items-center text-sm">
                  <Calendar className="mr-2 h-4 w-4 text-gray-500" />
                  <span className="text-gray-700">Tham gia: {userData.joinedDate}</span>
                </div>
                <div className="flex items-center text-sm">
                  <Clock className="mr-2 h-4 w-4 text-gray-500" />
                  <span className="text-gray-700">Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y: {userData.lastActive}</span>
                </div>
                <div className="flex items-center text-sm">
                  <Award className="mr-2 h-4 w-4 text-orange-500" />
                  <span className="text-gray-700">H·ªçc li√™n t·ª•c: {userData.learningStreak} ng√†y</span>
                </div>
              </div>

              <div className="mt-6">
                <h3 className="text-lg font-medium text-gray-900 mb-4">Th·ªëng k√™ h·ªçc t·∫≠p</h3>
                <div className="grid grid-cols-2 gap-4">
                  <div className="bg-gray-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-blue-600">{userData.completionRate}%</div>
                    <div className="text-xs text-gray-500">T·ª∑ l·ªá ho√†n th√†nh</div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-blue-600">{userData.totalCoursesCompleted}</div>
                    <div className="text-xs text-gray-500">Kh√≥a h·ªçc ƒë√£ ho√†n th√†nh</div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-blue-600">{userData.totalHoursLearned}</div>
                    <div className="text-xs text-gray-500">Gi·ªù h·ªçc t·∫≠p</div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-blue-600">{userData.certificatesEarned}</div>
                    <div className="text-xs text-gray-500">Ch·ª©ng ch·ªâ</div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-green-600">{userData.totalQuizzesPassed}</div>
                    <div className="text-xs text-gray-500">B√†i ki·ªÉm tra ƒë√£ v∆∞·ª£t qua</div>
                  </div>
                  <div className="bg-gray-50 p-4 rounded-lg text-center">
                    <div className="text-2xl font-bold text-green-600">{userData.totalAssignmentsSubmitted}</div>
                    <div className="text-xs text-gray-500">B√†i t·∫≠p ƒë√£ n·ªôp</div>
                  </div>
                </div>
              </div>

              <div className="mt-6">
                <h3 className="text-lg font-medium text-gray-900 mb-4">Th√†nh t√≠ch</h3>
                <div className="space-y-4">
                  {userData.achievements.map((achievement) => (
                    <div key={achievement.id} className="flex items-start p-3 bg-gray-50 rounded-lg">
                      <div className="flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-full bg-blue-100 text-blue-600 text-xl">
                        {achievement.icon}
                      </div>
                      <div className="ml-3">
                        <h4 className="text-sm font-medium text-gray-900">{achievement.title}</h4>
                        <p className="text-xs text-gray-500">{achievement.description}</p>
                        <p className="text-xs text-gray-400 mt-1">{achievement.date}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              <div className="mt-6">
                <h3 className="text-lg font-medium text-gray-900 mb-4">T√†i li·ªáu ƒë√£ t·∫£i</h3>
                <div className="space-y-2">
                  {userData.downloadedMaterials.map((material) => (
                    <div key={material.id} className="flex items-center justify-between p-2 bg-gray-50 rounded-lg">
                      <div className="flex items-center">
                        <Download className="h-4 w-4 text-gray-500 mr-2" />
                        <span className="text-sm text-gray-700">{material.title}</span>
                      </div>
                      <span className="text-xs text-gray-500">{material.date}</span>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* C·ªôt ph·∫£i - Ti·∫øn ƒë·ªô kh√≥a h·ªçc & C√†i ƒë·∫∑t */}
        <div className="lg:col-span-2">
          {/* Kh√≥a h·ªçc ƒëang h·ªçc */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden mb-8">
            <div className="p-6 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900">Kh√≥a h·ªçc ƒëang h·ªçc</h3>
              <p className="text-sm text-gray-500">H√†nh tr√¨nh h·ªçc t·∫≠p c·ªßa b·∫°n</p>
            </div>
            <div className="p-6">
              <div className="space-y-6">
                {userData.currentCourses.map((course) => (
                  <div key={course.id} className="border border-gray-100 rounded-lg p-4 shadow-sm">
                    <div className="flex flex-col sm:flex-row sm:items-center">
                      <div className="flex-shrink-0 mb-4 sm:mb-0 sm:mr-4">
                        <img
                          src={course.thumbnail || "/placeholder.svg"}
                          alt={course.title}
                          className="h-16 w-28 object-cover rounded-md"
                        />
                      </div>
                      <div className="flex-grow">
                        <div className="flex justify-between items-start mb-1">
                          <div className="flex items-center">
                            <CourseTypeIcon type={course.type} />
                            <h4 className="text-base font-medium text-gray-900 ml-2">{course.title}</h4>
                          </div>
                        </div>
                        <p className="text-xs text-gray-500 mb-2">Gi·∫£ng vi√™n: {course.instructor}</p>
                        <div className="w-full bg-gray-200 rounded-full h-2.5">
                          <div
                            className="bg-blue-600 h-2.5 rounded-full"
                            style={{ width: `${course.progress}%` }}
                          ></div>
                        </div>
                        <div className="flex justify-between mt-1">
                          <span className="text-xs text-gray-500">Ho√†n th√†nh {course.progress}%</span>
                          <span className="text-xs text-gray-500">Truy c·∫≠p g·∫ßn ƒë√¢y: {course.lastAccessed}</span>
                        </div>
                        <div className="mt-3 flex justify-between items-center">
                          <span className="text-xs text-gray-600">B√†i ti·∫øp theo: {course.nextLesson}</span>
                          <a href="#" className="text-sm text-blue-600 hover:text-blue-800 font-medium">
                            Ti·∫øp t·ª•c h·ªçc
                          </a>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Webinar s·∫Øp di·ªÖn ra */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden mb-8">
            <div className="p-6 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900">Webinar s·∫Øp di·ªÖn ra</h3>
              <p className="text-sm text-gray-500">C√°c bu·ªïi h·ªçc tr·ª±c tuy·∫øn b·∫°n ƒë√£ ƒëƒÉng k√Ω</p>
            </div>
            <div className="p-6">
              <div className="space-y-4">
                {userData.upcomingWebinars.map((webinar) => (
                  <div key={webinar.id} className="border border-gray-100 rounded-lg p-4 shadow-sm">
                    <div className="flex justify-between items-start">
                      <div>
                        <h4 className="text-base font-medium text-gray-900">{webinar.title}</h4>
                        <p className="text-sm text-gray-600 mt-1">Di·ªÖn gi·∫£: {webinar.speaker}</p>
                      </div>
                      <div className="text-right">
                        <p className="text-sm font-medium text-gray-900">{webinar.date}</p>
                        <p className="text-sm text-gray-500">{webinar.time}</p>
                      </div>
                    </div>
                    <div className="mt-3 flex justify-end">
                      <a href="#" className="text-sm text-blue-600 hover:text-blue-800">
                        Th√™m v√†o l·ªãch
                      </a>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Kh√≥a h·ªçc ƒë√£ ho√†n th√†nh */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden mb-8">
            <div className="p-6 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900">Kh√≥a h·ªçc ƒë√£ ho√†n th√†nh</h3>
              <p className="text-sm text-gray-500">C√°c kh√≥a h·ªçc b·∫°n ƒë√£ h·ªçc xong</p>
            </div>
            <div className="p-6">
              <div className="overflow-x-auto">
                <table className="min-w-full divide-y divide-gray-200">
                  <thead className="bg-gray-50">
                    <tr>
                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      >
                        Kh√≥a h·ªçc
                      </th>
                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      >
                        Gi·∫£ng vi√™n
                      </th>
                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      >
                        Ng√†y ho√†n th√†nh
                      </th>
                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      >
                        K·∫øt qu·∫£
                      </th>
                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      >
                        Ch·ª©ng ch·ªâ
                      </th>
                    </tr>
                  </thead>
                  <tbody className="bg-white divide-y divide-gray-200">
                    {userData.completedCourses.map((course) => (
                      <tr key={course.id}>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div className="text-sm font-medium text-gray-900">{course.title}</div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div className="text-sm text-gray-500">{course.instructor}</div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div className="text-sm text-gray-500">{course.completedDate}</div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div className="text-sm font-medium text-gray-900">{course.grade}</div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap">
                          {course.certificate ? (
                            <a href="#" className="inline-flex items-center text-sm text-blue-600 hover:text-blue-800">
                              <FileText className="h-4 w-4 mr-1" />
                              Xem
                            </a>
                          ) : (
                            <span className="text-sm text-gray-500">N/A</span>
                          )}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>
          </div>

          {/* T√πy ch·ªçn h·ªçc t·∫≠p */}
          <div className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="p-6 border-b border-gray-200">
              <h3 className="text-lg font-medium text-gray-900">T√πy ch·ªçn h·ªçc t·∫≠p</h3>
              <p className="text-sm text-gray-500">T√πy ch·ªânh tr·∫£i nghi·ªám h·ªçc tr·ª±c tuy·∫øn c·ªßa b·∫°n</p>
            </div>
            <div className="p-6">
              <div className="space-y-6">
                <div>
                  <label htmlFor="language" className="block text-sm font-medium text-gray-700">
                    Ng√¥n ng·ªØ ∆∞a th√≠ch
                  </label>
                  <select
                    id="language"
                    name="language"
                    className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
                    defaultValue={userData.learningPreferences.preferredLanguage}
                  >
                    <option>Ti·∫øng Vi·ªát</option>
                    <option>Ti·∫øng Anh</option>
                    <option>Ti·∫øng Ph√°p</option>
                    <option>Ti·∫øng Nh·∫≠t</option>
                    <option>Ti·∫øng Trung</option>
                  </select>
                </div>

                <div>
                  <label htmlFor="content-format" className="block text-sm font-medium text-gray-700">
                    ƒê·ªãnh d·∫°ng n·ªôi dung ∆∞a th√≠ch
                  </label>
                  <select
                    id="content-format"
                    name="content-format"
                    className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
                    defaultValue={userData.learningPreferences.contentFormat}
                  >
                    <option>Video</option>
                    <option>VƒÉn b·∫£n</option>
                    <option>√Çm thanh</option>
                    <option>T∆∞∆°ng t√°c</option>
                  </select>
                </div>

                <div>
                  <label htmlFor="study-time" className="block text-sm font-medium text-gray-700">
                    Th·ªùi gian h·ªçc ∆∞a th√≠ch
                  </label>
                  <select
                    id="study-time"
                    name="study-time"
                    className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
                    defaultValue={userData.learningPreferences.preferredStudyTime}
                  >
                    <option>Bu·ªïi s√°ng</option>
                    <option>Bu·ªïi tr∆∞a</option>
                    <option>Bu·ªïi chi·ªÅu</option>
                    <option>Bu·ªïi t·ªëi</option>
                  </select>
                </div>

                <div>
                  <label htmlFor="video-quality" className="block text-sm font-medium text-gray-700">
                    Ch·∫•t l∆∞·ª£ng video
                  </label>
                  <select
                    id="video-quality"
                    name="video-quality"
                    className="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md"
                    defaultValue={userData.learningPreferences.videoQuality}
                  >
                    <option>T·ª± ƒë·ªông</option>
                    <option>Th·∫•p (ti·∫øt ki·ªám d·ªØ li·ªáu)</option>
                    <option>Trung b√¨nh</option>
                    <option>HD</option>
                    <option>Full HD</option>
                  </select>
                </div>

                <div className="flex items-center">
                  <input
                    id="study-reminders"
                    name="study-reminders"
                    type="checkbox"
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    defaultChecked={userData.learningPreferences.studyReminders}
                  />
                  <label htmlFor="study-reminders" className="ml-2 block text-sm text-gray-700">
                    B·∫≠t nh·∫Øc nh·ªü h·ªçc t·∫≠p
                  </label>
                </div>

                <div className="flex items-center">
                  <input
                    id="email-notifications"
                    name="email-notifications"
                    type="checkbox"
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    defaultChecked={userData.learningPreferences.emailNotifications}
                  />
                  <label htmlFor="email-notifications" className="ml-2 block text-sm text-gray-700">
                    Nh·∫≠n th√¥ng b√°o qua email v·ªÅ kh√≥a h·ªçc m·ªõi v√† c·∫≠p nh·∫≠t
                  </label>
                </div>

                <div className="flex items-center">
                  <input
                    id="download-enabled"
                    name="download-enabled"
                    type="checkbox"
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    defaultChecked={userData.learningPreferences.downloadEnabled}
                  />
                  <label htmlFor="download-enabled" className="ml-2 block text-sm text-gray-700">
                    Cho ph√©p t·∫£i xu·ªëng t√†i li·ªáu h·ªçc t·∫≠p
                  </label>
                </div>

                <div className="flex items-center">
                  <input
                    id="subtitles-enabled"
                    name="subtitles-enabled"
                    type="checkbox"
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    defaultChecked={userData.learningPreferences.subtitlesEnabled}
                  />
                  <label htmlFor="subtitles-enabled" className="ml-2 block text-sm text-gray-700">
                    Hi·ªÉn th·ªã ph·ª• ƒë·ªÅ trong video b√†i gi·∫£ng
                  </label>
                </div>

                <div className="pt-5">
                  <button
                    type="button"
                    onClick={handleSavePreferences}
                    disabled={isLoading}
                    className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                  >
                    {isLoading && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
                    L∆∞u t√πy ch·ªçn
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

